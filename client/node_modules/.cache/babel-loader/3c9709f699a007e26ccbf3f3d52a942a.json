{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar getDotCount = function getDotCount(spec) {\n  return Math.ceil(spec.slideCount / spec.dotsScroll);\n};\n\nvar Dots = function Dots(_ref) {\n  var slideCount = _ref.slideCount,\n      dotsScroll = _ref.dotsScroll,\n      slidesToShow = _ref.slidesToShow,\n      infinite = _ref.infinite,\n      activeIndex = _ref.activeIndex,\n      clickHandler = _ref.clickHandler,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseOver = _ref.onMouseOver,\n      onMouseLeave = _ref.onMouseLeave,\n      customPaging = _ref.customPaging,\n      appendDots = _ref.appendDots,\n      dotsClass = _ref.dotsClass;\n\n  var ClickHandler = function ClickHandler(options, e) {\n    // In Autoplay the focus stays on clicked button even after transition\n    // to next slide. That only goes away by click somewhere outside\n    e.preventDefault();\n    clickHandler(options);\n  }; // Apply join & split to Array to pre-fill it for IE8\n  //\n  // Credit: http://stackoverflow.com/a/13735425/1849458\n\n\n  var dotCount = getDotCount({\n    slideCount: slideCount,\n    dotsScroll: dotsScroll,\n    slidesToShow: slidesToShow,\n    infinite: infinite\n  });\n  var dots = Array.apply([], Array(dotCount + 1).join('0').split('')).map(function (x, i) {\n    var leftBound = i * dotsScroll;\n    var rightBound = i * dotsScroll + (dotsScroll - 1);\n    var className = (0, _classnames[\"default\"])({\n      'carousel-dots-active': activeIndex >= leftBound && activeIndex <= rightBound\n    });\n    var dotOptions = {\n      message: 'dots',\n      index: i,\n      dotsScroll: dotsScroll,\n      activeIndex: activeIndex\n    };\n    return _react[\"default\"].createElement(\"li\", {\n      className: \"\".concat(className, \" carousel-dot-\").concat(i + 1),\n      key: \"\".concat(new Date().getTime() * i)\n    }, _react[\"default\"].cloneElement(customPaging(i), {\n      onClick: function onClick(e) {\n        return ClickHandler(dotOptions, e);\n      }\n    }));\n  });\n  return _react[\"default\"].cloneElement(appendDots(dots), _objectSpread({\n    className: dotsClass\n  }, {\n    onMouseEnter: onMouseEnter,\n    onMouseOver: onMouseOver,\n    onMouseLeave: onMouseLeave\n  }));\n};\n\nDots.defaultProps = _types.dotsDefaultProps;\nDots.propTypes = _types.dotsPropTypes;\nvar _default = Dots;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}