{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar CircularArray = /*#__PURE__*/function () {\n  _createClass(CircularArray, [{\n    key: \"length\",\n    get: function get() {\n      return this.array.length;\n    }\n  }]);\n\n  function CircularArray(n) {\n    var _this = this;\n\n    var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, CircularArray);\n\n    _defineProperty(this, \"array\", []);\n\n    _defineProperty(this, \"key\", []);\n\n    _defineProperty(this, \"origin\", null);\n\n    _defineProperty(this, \"toString\", function (array) {\n      var result = [];\n      var newArray = array || _this.array;\n\n      for (var i = 0; i < newArray.length; i += 1) {\n        var item = newArray[i];\n        if (_typeof(item) === 'object' && item instanceof Array) result.push(\"[\".concat(_this.toString(item), \"]\"));else if (_typeof(item) === 'object') result.push(JSON.stringify(item));else result.push(item.toString());\n      }\n\n      return result.join(',');\n    });\n\n    _defineProperty(this, \"get\", function (i) {\n      var result;\n\n      if (i < 0 || i < _this.length - _this.array.length) {\n        result = _this.array[-i % _this.array.length === 0 ? 0 : _this.array.length + i % _this.array.length];\n      } else {\n        result = _this.array[i % _this.array.length];\n      }\n\n      return result;\n    });\n\n    _defineProperty(this, \"getKeyIndex\", function (i) {\n      var originItem = _this.origin.get(i);\n\n      var carouselkey = originItem.dataset.carouselkey;\n      return _this.key.indexOf(carouselkey);\n    });\n\n    _defineProperty(this, \"getIndex\", function (i) {\n      var result;\n\n      if (i < 0 || i < _this.length - _this.array.length) {\n        result = -i % _this.array.length === 0 ? 0 : _this.array.length + i % _this.array.length;\n      } else {\n        result = i % _this.array.length;\n      }\n\n      return result;\n    });\n\n    _defineProperty(this, \"set\", function (i, v) {\n      if (i < 0 || i < _this.length - _this.array.length) {\n        throw new Error('can not set index < 0');\n      }\n\n      if (i >= _this.length) {\n        var newArr = new Array(i - _this.length + 1);\n        _this.array = _this.array.concat(newArr);\n\n        _this.array.splice(i, 1, v);\n      } else {\n        _this.array[_this.getIndex(i)] = v;\n      }\n    });\n\n    this.array = [];\n\n    if (typeof n === 'number') {\n      this.array = new Array(n);\n    } else if (_typeof(n) === 'object' && Array.isArray(n)) {\n      this.array = n;\n    } else if (_typeof(n) === 'object' && n.length > 0 && n instanceof NodeList) {\n      for (var i = 0; i < n.length; i += 1) {\n        this.array.push(n[i]);\n      }\n\n      this.key = this.array.map(function (item) {\n        var carouselkey = item.dataset.carouselkey;\n        return carouselkey;\n      });\n    } else {\n      throw new Error('can not create array');\n    }\n\n    this.origin = origin;\n  }\n\n  return CircularArray;\n}();\n\nvar _default = CircularArray;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}