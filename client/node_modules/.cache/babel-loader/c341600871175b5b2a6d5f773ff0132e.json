{"ast":null,"code":"var _jsxFileName = \"/Users/raunaqbahl/Documents/Uni/Sem 2, 2020/ENGG4802 (Thesis)/men-s-shed-thesis/mens-shed/src/Mic.js\";\nimport React from 'react';\nimport { ReactMic } from 'react-mic';\nimport './index.css';\nexport class Mic extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startRecording = () => {\n      this.setState({\n        record: true\n      });\n    };\n\n    this.stopRecording = () => {\n      this.setState({\n        record: false\n      });\n    };\n\n    this.state = {\n      record: false\n    };\n  }\n\n  onData(recordedBlob) {\n    console.log('chunk of real-time data is: ', recordedBlob);\n  }\n\n  onStop(recordedBlob) {\n    console.log('recordedBlob is: ', recordedBlob);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactMic, {\n      record: this.state.record,\n      className: \"sound-wave\",\n      onStop: this.onStop,\n      onData: this.onData,\n      strokeColor: \"#000000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startRecording,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.stopRecording,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Stop\"));\n  }\n\n}\nexport default Mic;","map":{"version":3,"sources":["/Users/raunaqbahl/Documents/Uni/Sem 2, 2020/ENGG4802 (Thesis)/men-s-shed-thesis/mens-shed/src/Mic.js"],"names":["React","ReactMic","Mic","Component","constructor","props","startRecording","setState","record","stopRecording","state","onData","recordedBlob","console","log","onStop","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAO,aAAP;AAEA,OAAO,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,cAPmB,GAOF,MAAM;AACrB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KATkB;;AAAA,SAWnBC,aAXmB,GAWH,MAAM;AACpB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KAbkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAUDG,EAAAA,MAAM,CAACC,YAAD,EAAe;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,YAA5C;AACD;;AAEDG,EAAAA,MAAM,CAACH,YAAD,EAAe;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,YAAjC;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,KAAKN,KAAL,CAAWF,MADrB;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,MAAM,EAAE,KAAKO,MAHf;AAIE,MAAA,MAAM,EAAE,KAAKJ,MAJf;AAKE,MAAA,WAAW,EAAC,SALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAQ,MAAA,OAAO,EAAE,KAAKL,cAAtB;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,eASE;AAAQ,MAAA,OAAO,EAAE,KAAKG,aAAtB;AAAqC,MAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF;AAaD;;AAtCsC;AAyCzC,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport { ReactMic } from 'react-mic';\nimport './index.css';\n \nexport class Mic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: false\n    }\n  }\n \n  startRecording = () => {\n    this.setState({ record: true });\n  }\n \n  stopRecording = () => {\n    this.setState({ record: false });\n  }\n \n  onData(recordedBlob) {\n    console.log('chunk of real-time data is: ', recordedBlob);\n  }\n \n  onStop(recordedBlob) {\n    console.log('recordedBlob is: ', recordedBlob);\n  }\n \n  render() {\n    return (\n      <div>\n        <ReactMic\n          record={this.state.record}\n          className=\"sound-wave\"\n          onStop={this.onStop}\n          onData={this.onData}\n          strokeColor=\"#000000\"\n           />\n        <button onClick={this.startRecording} type=\"button\">Start</button>\n        <button onClick={this.stopRecording} type=\"button\">Stop</button>\n      </div>\n    );\n  }\n}\n\nexport default Mic;"]},"metadata":{},"sourceType":"module"}