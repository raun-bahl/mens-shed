{"ast":null,"code":"var _jsxFileName = \"/Users/raunaqbahl/Documents/Uni/Sem 2, 2020/ENGG4802 (Thesis)/men-s-shed-thesis/mens-shed/client/src/FileUpload.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState('');\n  const [filename, setFileName] = useState('Choose File');\n  const [uploadedFile, setUploadedFile] = useState({});\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  };\n\n  useEffect(() => {\n    const onSubmit = async e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append('file', file);\n\n      try {\n        const res = await axios.post('/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        const {\n          fileName,\n          filePath\n        } = res.data;\n        console.log(filePath);\n        setUploadedFile({\n          fileName,\n          filePath\n        });\n      } catch (err) {\n        if (err.response.status == 500) {\n          console.log('Server problem');\n        } else {\n          console.log(err.response.data.msg);\n        }\n      }\n    };\n  }, []);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      console.log(filePath);\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n    } catch (err) {\n      if (err.response.status == 500) {\n        console.log('Server problem');\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-file mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"customFile\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"customFile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, filename)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  })), uploadedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, uploadedFile.fileName), /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/raunaqbahl/Documents/Uni/Sem 2, 2020/ENGG4802 (Thesis)/men-s-shed-thesis/mens-shed/client/src/FileUpload.js"],"names":["React","Fragment","useState","useEffect","axios","FileUpload","file","setFile","filename","setFileName","uploadedFile","setUploadedFile","onChange","e","target","files","name","onSubmit","preventDefault","formData","FormData","append","res","post","headers","fileName","filePath","data","console","log","err","response","status","msg","width"],"mappings":"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","sourcesContent":[" import React, {Fragment, useState, useEffect} from 'react';\n import axios from 'axios';\n\n const FileUpload = () => {\n\n \tconst [file, setFile] = useState('');\n \tconst [filename, setFileName] = useState('Choose File');\n \tconst [uploadedFile, setUploadedFile] = useState({});\n\n \tconst onChange = e => {\n \t\tsetFile(e.target.files[0]);\n \t\tsetFileName(e.target.files[0].name);\n \t};\n\n\n \tuseEffect(() => {\n \t\tconst onSubmit =  async e => {\n \t\te.preventDefault();\n \t\tconst formData = new FormData();\n \t\tformData.append('file', file);\n\n \t\ttry {\n\n\n \t\t\tconst res = await axios.post('/upload', formData, {\n \t\t\t\theaders: {\n \t\t\t\t\t'Content-Type': 'multipart/form-data',\n \t\t\t\t}\n \t\t\t});\n\n \t\t\tconst { fileName, filePath } = res.data;\n \t\t\tconsole.log(filePath);\n \t\t\tsetUploadedFile({ fileName, filePath });\n\n \t\t} catch(err) {\n \t\t\tif (err.response.status == 500) {\n \t\t\t\tconsole.log('Server problem');\n \t\t\t} else {\n \t\t\t\tconsole.log(err.response.data.msg);\n \t\t\t}\n \t\t}\n \t\t};\n \t}, []);\n \tconst onSubmit =  async e => {\n \t\te.preventDefault();\n \t\tconst formData = new FormData();\n \t\tformData.append('file', file);\n\n \t\ttry {\n\n\n \t\t\tconst res = await axios.post('/upload', formData, {\n \t\t\t\theaders: {\n \t\t\t\t\t'Content-Type': 'multipart/form-data',\n \t\t\t\t}\n \t\t\t});\n\n \t\t\tconst { fileName, filePath } = res.data;\n \t\t\tconsole.log(filePath);\n \t\t\tsetUploadedFile({ fileName, filePath });\n\n \t\t} catch(err) {\n \t\t\tif (err.response.status == 500) {\n \t\t\t\tconsole.log('Server problem');\n \t\t\t} else {\n \t\t\t\tconsole.log(err.response.data.msg);\n \t\t\t}\n \t\t}\n \t};\n\n \treturn (\n \t\t<Fragment>\n \t\t\t<form onSubmit = {onSubmit}>\n \t\t\t\t<div className=\"custom-file mb-4\">\n\t\t\t\t  <input type=\"file\" className=\"custom-file-input\" id=\"customFile\"  onChange = {onChange}/>\n\t\t\t\t  <label className=\"custom-file-label\" htmlFor=\"customFile\">{filename}</label>\n\t\t\t\t</div>\n\n\t\t\t\t<input type=\"submit\" value = \"Upload\" className = \"btn btn-primary btn-block mt-4\" />\n \t\t\t</form>\n      {uploadedFile ? (\n        <div className='row mt-5'>\n          <div className='col-md-6 m-auto'>\n            <h3 className='text-center'>{uploadedFile.fileName}</h3>\n            <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n          </div>\n        </div>\n      ) : null} \n \t\t</Fragment>\n \t);\n };\n\n export default FileUpload;"]},"metadata":{},"sourceType":"module"}