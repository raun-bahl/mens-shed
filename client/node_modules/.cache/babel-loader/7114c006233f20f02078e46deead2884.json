{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NextArrow = exports.PrevArrow = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _types = require(\"./types\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Arrow = function Arrow(_ref) {\n  var arrowsScroll = _ref.arrowsScroll,\n      clickHandler = _ref.clickHandler,\n      type = _ref.type,\n      prevArrow = _ref.prevArrow,\n      nextArrow = _ref.nextArrow,\n      arrowsBlock = _ref.arrowsBlock;\n\n  var ClickHandler = function ClickHandler(options, e) {\n    e.preventDefault();\n    clickHandler(options, e);\n  };\n\n  var classes = {\n    'carousel-arrow': true,\n    block: arrowsBlock\n  };\n  var arrowOptions = {\n    arrowsScroll: arrowsScroll\n  };\n\n  if (type === 'prev') {\n    Object.assign(classes, {\n      'carousel-prev': true\n    });\n\n    if (prevArrow) {\n      Object.assign(classes, {\n        custom: true\n      });\n    }\n\n    Object.assign(arrowOptions, {\n      message: 'previous'\n    });\n  } else {\n    Object.assign(classes, {\n      'carousel-next': true\n    });\n\n    if (nextArrow) {\n      Object.assign(classes, {\n        custom: true\n      });\n    }\n\n    Object.assign(arrowOptions, {\n      message: 'next'\n    });\n  }\n\n  var arrowProps = {\n    key: type === 'prev' ? '0' : '1',\n    'data-role': 'none',\n    className: (0, _classnames[\"default\"])(classes),\n    // style: { display: 'block' },\n    onClick: function onClick(e) {\n      return ClickHandler(arrowOptions, e);\n    }\n  }; // const customProps = {\n  //   currentSlide,\n  //   slideCount,\n  // };\n\n  var customArrow = null;\n\n  if (prevArrow && type === 'prev') {\n    customArrow = _react[\"default\"].cloneElement(prevArrow, _objectSpread({}, arrowProps));\n  } else if (nextArrow && type === 'next') {\n    customArrow = _react[\"default\"].cloneElement(nextArrow, _objectSpread({}, arrowProps));\n  } else {\n    customArrow = _react[\"default\"].createElement(\"button\", _extends({}, arrowProps, {\n      key: type === 'prev' ? '0' : '1',\n      type: \"button\"\n    }), ' ', type === 'prev' ? 'Previous' : 'Next');\n  }\n\n  return customArrow;\n};\n\nArrow.propTypes = _types.arrowsPropTypes;\nArrow.defaultProps = _types.arrowsDefaultProps;\n\nvar PrevArrow = function PrevArrow(props) {\n  return _react[\"default\"].createElement(Arrow, _extends({\n    type: \"prev\"\n  }, props));\n};\n\nexports.PrevArrow = PrevArrow;\n\nvar NextArrow = function NextArrow(props) {\n  return _react[\"default\"].createElement(Arrow, _extends({\n    type: \"next\"\n  }, props));\n};\n\nexports.NextArrow = NextArrow;","map":null,"metadata":{},"sourceType":"script"}